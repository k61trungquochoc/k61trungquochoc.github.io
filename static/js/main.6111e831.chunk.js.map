{"version":3,"sources":["logo.svg","components/Random.js","components/List.js","components/fakeData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","props","getRandom","setState","isRandoming","intervel","setInterval","state","number","Math","floor","random","clearInterval","stopRandom","done","setNumber","selected","id","nextProps","this","openList","className","role","name","type","onClick","Component","data","onChoose","style","height","scope","map","item","key","choosen","App","show","fakeData","console","log","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6111e831.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\n\r\nexport default class extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            number: 0\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps?.selected?.id !== this.props?.selected?.id) {\r\n            this.setState({ done: false, number: 0 })\r\n        }\r\n    }\r\n\r\n    getRandom = () => {\r\n        this.setState({ isRandoming: true })\r\n        let intervel = setInterval(() => {\r\n            if (!this.state.isRandoming) clearInterval(intervel)\r\n            else {\r\n                let number = Math.floor(Math.random() * 10) + 1;\r\n                this.setState({ number })\r\n            }\r\n        }, 10);\r\n    }\r\n\r\n    stopRandom = () => {\r\n        let number = Math.floor(Math.random() * 10) + 1;\r\n        this.setState({\r\n            isRandoming: false,\r\n            // number: this.props?.selected?.id || number ,\r\n            number,\r\n            done: true,\r\n        }, () => {\r\n            // if (this.props?.selected?.id) this.props.setNumber(this.props?.selected?.id, this.props?.selected?.choosen)\r\n            this.props.setNumber(this.props?.selected?.id, number)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { number, isRandoming, done } = this.state;\r\n        const { selected, openList } = this.props;\r\n        return (\r\n            <div className='h-100' >\r\n                <div className=\"alert alert-primary hidden-on-moblie\" role=\"alert\">\r\n                    Chọn sinh viên ở bảng bên trái để bắt đầu\r\n                </div>\r\n                <div className='d-flex flex-column align-items-center justify-content-between random-padding-top'>\r\n                    <h1 className=\"text-center\">{selected?.name}</h1>\r\n                    <h1 className='number pb-5'>{number}</h1>\r\n                    {(!done || !selected?.id) && (isRandoming ?\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={this.stopRandom}>STOP</button>\r\n                        :\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.getRandom}>Random</button>)\r\n                    }\r\n                </div>\r\n                <div className=\"show-on-moblie position-b-50 text-center\">\r\n                    <div className=\"alert alert-primary\" role=\"alert\" onClick={openList}>\r\n                        Bấm để quay lại danh sách sinh viên\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class extends Component {\r\n    render() {\r\n        const { data, onChoose } = this.props;\r\n        return (\r\n            <div className=\"card\" style={{ height: '100%' }}>\r\n                <div className=\"card-header\">\r\n                    <h5 className=\"card-title\">Danh sách sinh viên</h5>\r\n                </div>\r\n                <div className=\"tableFixHead\">\r\n                    <table className=\"table table-striped table-hover\">\r\n                        <thead>\r\n                            <tr className=\"table-info\">\r\n                                <th scope=\"col\" className=\"text-center\">#</th>\r\n                                <th scope=\"col\">Họ và tên</th>\r\n                                <th scope=\"col\" className=\"text-center\">Chủ đề</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data.map(item => (\r\n                                <tr key={item.id}>\r\n                                    <th scope=\"row\" className=\"text-center\">{item.id}</th>\r\n                                    <td>{item.name}</td>\r\n                                    <td className=\"text-center\">{item.number ? item.number : (\r\n                                        <span className=\"cursor-pointer btn-link\" onClick={() => onChoose(item)}>Chọn</span>\r\n                                    )}</td>\r\n                                </tr>\r\n                            ))}\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","export default [\r\n    { id: 1, name: 'Trần Thị Vân Anh', choosen: 1 },\r\n    { id: 2, name: 'Nguyễn Thị Ngọc Chinh', choosen: 2 },\r\n    { id: 3, name: 'Nguyễn Thị Dương', choosen: 3 },\r\n    { id: 4, name: 'Lăng Thị Thu Hà', choosen: 4 },\r\n    { id: 5, name: 'Nguyễn Minh Hằng', choosen: 5 },\r\n    { id: 6, name: 'Nguyễn Thị Thu Hằng', choosen: 6 },\r\n    { id: 7, name: 'Nguyễn Thị Khánh Hoà', choosen: 7 },\r\n    { id: 8, name: 'Nguyễn Thị Hồng', choosen: 8 },\r\n    { id: 9, name: 'Lê Công Huy', choosen: 9 },\r\n    { id: 10, name: 'Mạ Thị Hương', choosen: 10 },\r\n    { id: 11, name: 'Lại Thảo Linh', choosen: 11 },\r\n    { id: 12, name: 'Nguyễn Thị Linh', choosen: 12 },\r\n    { id: 13, name: 'Vũ Khánh Linh', choosen: 13 },\r\n    { id: 14, name: 'Hoàng Thị Ly', choosen: 14 },\r\n    { id: 15, name: 'Nguyễn Thị Ngần', choosen: 15 },\r\n    { id: 16, name: 'Hoàng Thị Mộng Ngọc', choosen: 16 },\r\n    { id: 17, name: 'Nguyễn Bích Ngọc', choosen: 17 },\r\n    { id: 18, name: 'Trần Thị Nguyệt', choosen: 18 },\r\n    { id: 19, name: 'Nguyễn Thị Thanh Thủy', choosen: 19 },\r\n    { id: 20, name: 'Nguyễn Thu Thủy', choosen: 20 },\r\n    { id: 21, name: 'Phạm Thị Huyền Trang', choosen: 21 },\r\n    { id: 22, name: 'Lý Thị Tuyết', choosen: 22 },\r\n    { id: 23, name: 'Nguyễn Hồng Vinh', choosen: 23 }\r\n]\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Random from './components/Random';\r\nimport List from './components/List';\r\nimport fakeData from './components/fakeData'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: fakeData\r\n    };\r\n  }\r\n\r\n  onChoose = (selected) => {\r\n    this.setState({ selected, show: true })\r\n  }\r\n\r\n  setNumber = (id, number) => {\r\n    this.setState(({ data }) => {\r\n      let newData = data.map(item => {\r\n        if (item.id === id) item.number = number;\r\n        return item;\r\n      })\r\n      return { data: newData }\r\n    })\r\n  }\r\n\r\n  openList = () => {\r\n    this.setState({ show: false })\r\n  }\r\n\r\n  render() {\r\n    const { data, selected, show } = this.state;\r\n    console.log(show);\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n          <span className=\"navbar-brand mb-0 h1\"><img src={logo} className=\"App-logo\" alt=\"logo\" />K61 Trung Quốc học</span>\r\n        </nav>\r\n        <div className=\"content pt-3 pb-3\">\r\n          <div className=\"row\" style={{ height: '100%' }}>\r\n            <div className=\"col-12 col-sm-4\" style={{ height: '100%' }}>\r\n              <List data={data} onChoose={this.onChoose} />\r\n            </div>\r\n            <div className={`col-12 col-sm-8 mobile ${!show ? 'show' : ''}`} style={{ height: '100%' }}>\r\n              <Random selected={selected} setNumber={this.setNumber} openList={this.openList} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}